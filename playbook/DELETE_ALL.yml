--- 
- name: Inital testing for MySQL NDB cluster
  vars_files:
    - vars/sec_vars.yml
    - vars/deployment_vars.yml
    - vars/deployment_output_vars.yml
    - vars/aws_template_vars.yml
  hosts: localhost
  gather_facts: false
  tasks:
     # VPC Exists/Create
#    - name: VPC Exists
#      import_tasks:
#        file: tasks/create_vpc.yml

    # Deployment record title/product_id/vpc_id

    # New project keypair exists or create
    - name: import new key task key_pair

    # AWS bucket and/or registry storage w/access policies for project software and configurations
    - name: S3 Bucket and ECR creation task
      import_tasks:
        file: tasks/create_s3_bucket.yml

    - name: Policy for S3 and ECR
      import_tasks:
        file: tasks/create_s3_policy.yml

    - name: Copy files to Bucket
      import_tasks:
        file: tasks/put_s3_sources.yml

    - name: Define mycl parameters/secrets
      import_tasks:
        file: tasks/define_mycl_parameters.yml

    # Networking exists or create
    - name: Create Node communication subnet
      import_tasks:
        file: tasks/subnet.yml

    - name: Create node communication security group
      import_tasks:
        file: tasks/create_security_group.yml

    - name: Show security group sg instance_id
      ansible.builtin.debug:
        var: sg_info['group_id']

    - name: EC2 Assume Role/Profile exists/create
      import_tasks:
        file: tasks/create_assume_role.yml

    - name: AMI Instance exists/create
      import_tasks: tasks/ec2_instance.yml

    - name: Register instance in ad-hoc groups
      add_host:
        hostname: "{{ ec2['instances'][0]['network_interfaces'][0]['association']['public_ip'] }}"
        groups:
          - ec2hosts
          - mycl
          - u22
#          - myclmgr

    - name: Update deployment inventory.yml
      shell: |
        php "{{ script_path }}/update_inventory.php" "{{ groups }}"
      ignore_errors: true
      register: php_output
    - debug:
        msg: "{{ php_output }}"

- name: Run play basic ubuntu server setup
  import_playbook: configure_ami_instance.yml

- name: Run play MySQL Cluster
  import_playbook: install_mysql_cluster.yml

- name: create AMI
  import_playbook: generate_ami.yml

# Creates one ASG for the MySQL cluster 
- name: create launch template and ASG
  import_playbook: create_asgs_mgr_nodes_lts.yml
